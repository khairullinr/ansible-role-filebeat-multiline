---
- name: Destroy
  hosts: localhost
  connection: local
  gather_facts: False
  #no_log: "{{ not ((lookup('env', 'MOLECULE_DEBUG') | bool) or (molecule_yml.provisioner.log | default(false) | bool)) }}"
  no_log: false
  vars:
    keypair_name: "molecule-key_\
      {{ lookup('env','MOLECULE_PROJECT_DIRECTORY').split('/')[-1] }}_\
      {{ lookup('env','MOLECULE_SCENARIO_NAME') }}"
  tasks:

    - name: Delete remote keypair
      ec2_key:
        name: '{{ keypair_name }}'
        state: absent

    - name: Get instances list
      ec2_instance_facts:
        filters:
          "tag:instance": "{{ molecule_yml.platforms | map(attribute='name') | list }}"
        region: us-east-1
      register: ec2_sets

    - name: debug info from single instance and many devices 1
      debug:
        msg: "{{ ec2_sets.instances | list }}"

    - name: debug info from single instance and many devices 2
      debug:
        msg: "{{ ec2_sets.instances | map(attribute='block_device_mappings') | list }}"

    - name: debug info from single instance and many devices 3
      debug:
        msg: "{{ ec2_sets.instances | sum(attribute='block_device_mappings', start=[]) | map(attribute='ebs.volume_id') | list }}"

    # - name: loop debug
    #   debug: 
    #     msg: "{{ item.block_device_mapping | map(attribute='volume_id') | list }}"
    #   with_items: "{{ ec2_sets.instances | map(attribute='instance_id') | list }}"

    # - name: debug for volume id
    #   debug:
    #     msg: "{{ ec2_sets.instances.block_device_mapping | map(attribute=''volume_id') | list }}"



    # - name: Get instances' volume(s)
    #   ec2_vol_facts:
    #     filters:
    #       attachment.instance-id: "{{ ec2_sets.instances | map(attribute='volume_id') | list }}"
    #   register: ec2_vol_facts

    # - name: Get instances' volume(s)
    #   ec2_instance_facts:
    #     filters:
    #       instance-id: "{{ ec2_sets.instances | map(attribute='instance_id') | list }}"
    #   register: ec2_sets
    #   when: ( ec2_sets.instances | map(attribute='instance_id') | list | length )      

    - name: Destroy molecule instance(s)
      ec2:
        state: absent
        region: us-east-1
        instance_ids: "{{ ec2_sets.instances | map(attribute='instance_id') | list }}"
        wait: True
      register: server
      when: ( ec2_sets.instances | map(attribute='instance_id') | list | length )
    
    - name: Delete instance' volume(s)
      ec2_vol:
        id: "{{ ec2_sets.instances | sum(attribute='block_device_mappings', start=[]) | map(attribute='ebs.volume_id') | list }}"
        state: absent
      when: ( ec2_sets.instances | sum(attribute='block_device_mappings', start=[]) | map(attribute='ebs.volume_id') | list | length )

    # Mandatory configuration for Molecule to function.

    - name: Populate instance config
      set_fact:
        instance_conf: {}

    - name: Dump instance config
      copy:
        content: '{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}'
        dest: '{{ molecule_instance_config }}'
      when: server.changed | bool
